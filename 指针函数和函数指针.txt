指针函数和函数指针
1、指针函数是指带指针的函数，即本质是一个函数。函数返回类型是某一类型的指针
	类型标识符 *函数名(参数表)
	int *f(x,y);
	首先它是一个函数，只不过这个函数的返回值是一个地址值。
函数返回值必须用同类型的指针变量来接受，也就是说，指针函数一定有
函数返回值，而且，在主调函数中，函数返回值必须赋给同类型的指针变量。


2、函数指针是指向函数的指针变量，即本质是一个指针变量
	int (*f)(int x);//声明一个函数指针
	f=func;//将func函数的首地址赋值给指针f
	指向函数的指针包含了函数的地址，可以通过它来调用函数。
	类型说明符(*函数名)(参数)
	//其实这里不能称为函数名，应该叫做指针的变量名。这个特殊的
指针指向一个返回整型值的函数。
	指针名和指针运算符外面的括号改变了默认的运算符优先级。
	例如：
	void (*fptr)();
	把函数的地址赋值给函数指针，可以使用下面两种形式：
	fptr=&Function;
	fptr=&Function;//取地址符号&不是必需的，因为单单一个函数标识符
如果是函数调用，还必须包含一个圆括号括起来的参数表。